package wgpu;
import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import wgpu.WgpuLibrary.WGPUCompareFunction;
import wgpu.WgpuLibrary.WGPUTextureFormat;
/**
 * <i>native declaration : webgpu.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("wgpu") 
public class WGPUDepthStencilState extends StructObject {
	public WGPUDepthStencilState() {
		super();
	}
	/// C type : const WGPUChainedStruct*
	@Field(0) 
	public Pointer<WGPUChainedStruct > nextInChain() {
		return this.io.getPointerField(this, 0);
	}
	/// C type : const WGPUChainedStruct*
	@Field(0) 
	public WGPUDepthStencilState nextInChain(Pointer<WGPUChainedStruct > nextInChain) {
		this.io.setPointerField(this, 0, nextInChain);
		return this;
	}
	/// C type : WGPUTextureFormat
	@Field(1) 
	public IntValuedEnum<WGPUTextureFormat > format() {
		return this.io.getEnumField(this, 1);
	}
	/// C type : WGPUTextureFormat
	@Field(1) 
	public WGPUDepthStencilState format(IntValuedEnum<WGPUTextureFormat > format) {
		this.io.setEnumField(this, 1, format);
		return this;
	}
	/// C type : WGPUBool
	@Field(2) 
	public int depthWriteEnabled() {
		return this.io.getIntField(this, 2);
	}
	/// C type : WGPUBool
	@Field(2) 
	public WGPUDepthStencilState depthWriteEnabled(int depthWriteEnabled) {
		this.io.setIntField(this, 2, depthWriteEnabled);
		return this;
	}
	/// C type : WGPUCompareFunction
	@Field(3) 
	public IntValuedEnum<WGPUCompareFunction > depthCompare() {
		return this.io.getEnumField(this, 3);
	}
	/// C type : WGPUCompareFunction
	@Field(3) 
	public WGPUDepthStencilState depthCompare(IntValuedEnum<WGPUCompareFunction > depthCompare) {
		this.io.setEnumField(this, 3, depthCompare);
		return this;
	}
	/// C type : WGPUStencilFaceState
	@Field(4) 
	public WGPUStencilFaceState stencilFront() {
		return this.io.getNativeObjectField(this, 4);
	}
	/// C type : WGPUStencilFaceState
	@Field(4) 
	public WGPUDepthStencilState stencilFront(WGPUStencilFaceState stencilFront) {
		this.io.setNativeObjectField(this, 4, stencilFront);
		return this;
	}
	/// C type : WGPUStencilFaceState
	@Field(5) 
	public WGPUStencilFaceState stencilBack() {
		return this.io.getNativeObjectField(this, 5);
	}
	/// C type : WGPUStencilFaceState
	@Field(5) 
	public WGPUDepthStencilState stencilBack(WGPUStencilFaceState stencilBack) {
		this.io.setNativeObjectField(this, 5, stencilBack);
		return this;
	}
	@Field(6) 
	public int stencilReadMask() {
		return this.io.getIntField(this, 6);
	}
	@Field(6) 
	public WGPUDepthStencilState stencilReadMask(int stencilReadMask) {
		this.io.setIntField(this, 6, stencilReadMask);
		return this;
	}
	@Field(7) 
	public int stencilWriteMask() {
		return this.io.getIntField(this, 7);
	}
	@Field(7) 
	public WGPUDepthStencilState stencilWriteMask(int stencilWriteMask) {
		this.io.setIntField(this, 7, stencilWriteMask);
		return this;
	}
	@Field(8) 
	public int depthBias() {
		return this.io.getIntField(this, 8);
	}
	@Field(8) 
	public WGPUDepthStencilState depthBias(int depthBias) {
		this.io.setIntField(this, 8, depthBias);
		return this;
	}
	@Field(9) 
	public float depthBiasSlopeScale() {
		return this.io.getFloatField(this, 9);
	}
	@Field(9) 
	public WGPUDepthStencilState depthBiasSlopeScale(float depthBiasSlopeScale) {
		this.io.setFloatField(this, 9, depthBiasSlopeScale);
		return this;
	}
	@Field(10) 
	public float depthBiasClamp() {
		return this.io.getFloatField(this, 10);
	}
	@Field(10) 
	public WGPUDepthStencilState depthBiasClamp(float depthBiasClamp) {
		this.io.setFloatField(this, 10, depthBiasClamp);
		return this;
	}
	public WGPUDepthStencilState(Pointer pointer) {
		super(pointer);
	}
}
